<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.project.yameokja.mappers.CommunityMapper">
	
<!-- 커뮤니티 글 목록 -->
	<select id="getCommunity" resultType="Community" resultMap="CommunityResultMap" parameterType="hashmap">
		SELECT *
		FROM community
		<where>
				<if test="type == '전체' ">
					community_title LIKE CONCAT('%',#{ keyword } , '%') OR community_title LIKE CONCAT('%',#{ keyword } , '%') OR community_content LIKE CONCAT('%',#{ keyword } , '%') 
				</if>
				<if test="type == '제목' ">	
					community_title LIKE CONCAT('%',#{ keyword } , '%')
				</if>
				<if test="type == '닉네임' ">
					member_id LIKE CONCAT('%',#{ keyword } , '%')
				</if>
				<if test="type == '내용' ">
					community_content LIKE CONCAT('%',#{ keyword } , '%')
				</if>
				<if test="cNo == 'all' ">
					AND category_no > '100'
				</if>
				<if test="cNo != 'all' ">
					AND category_no = ${cNo}
				</if>
		</where>
		ORDER BY community_no DESC
		LIMIT #{startRow}, #{num}
	</select>
	
	
<!-- 커뮤니티 글 개수 -->
	<select id="getCommunityCount" resultType="int" parameterType="hashmap">
		SELECT COUNT(community_no)
		FROM community
		<where>
			<if test="type == '전체' ">
				community_title LIKE CONCAT('%',#{ keyword } , '%') OR community_title LIKE CONCAT('%',#{ keyword } , '%') OR community_content LIKE CONCAT('%',#{ keyword } , '%') 
			</if>
			<if test="type == '제목' ">	
				community_title LIKE CONCAT('%',#{ keyword } , '%')
			</if>
			<if test="type == '닉네임' ">
				member_id LIKE CONCAT('%',#{ keyword } , '%')
			</if>
			<if test="type == '내용' ">
				community_content LIKE CONCAT('%',#{ keyword } , '%')
			</if>
			<if test="cNo == 'all' ">
					AND category_no > '100'
			</if>
			<if test="cNo != 'all' ">
				AND category_no = ${cNo}
			</if>
		</where>
	</select>
	
<!-- 커뮤니티 수다글 작성 -->
	<insert id="addCommunity101" parameterType="Community">
		INSERT INTO community
			(community_title, community_reg_date, community_content, 
					community_file, category_no, member_id, member_nickname)
			 VALUES (#{communityTitle}, SYSDATE(), #{communityContent},
				  #{communityFile}, #{categoryNo}, #{memberId}, #{memberNickname})
	</insert>
	
<!-- 커뮤니티 수다글 수정  -->
	<update id="updateCommunity101" parameterType="Community">
		UPDATE community
			SET community_title = #{communityTitle},
			community_content = #{communityContent},
			community_file = #{communityFile}
		WHERE community_no = #{communityNo}
	</update>
	
<!-- 커뮤니티 모집글 작성 -->
	<insert id="addCommunity102" parameterType="Community">
		INSERT INTO community
			(community_title, community_reg_date, community_content, 
					community_file, category_no, member_id, member_nickname,
					party_members, party_d_day, party_place, party_member_ids)
			 VALUES (#{communityTitle}, SYSDATE(), #{communityContent},
				  #{communityFile}, #{categoryNo}, #{memberId}, #{memberNickname},
				  #{partyMembers}, #{partyDDay}, #{partyPlace}, #{partyMemberIds})
	</insert>

<!-- 커뮤니티 모집글 수정  -->
	<update id="updateCommunity102" parameterType="Community">
		UPDATE community
			SET community_title = #{communityTitle},
			community_content = #{communityContent},
			community_file = #{communityFile},
			party_members = #{partyMembers},
			party_place = #{partyPlace}
		WHERE community_no = #{communityNo}
	</update>
	
<!-- 커뮤니티 모집글 참여 등록 -->
	<update id="update102PartyMemberIds" parameterType="hashmap">
		UPDATE community
			SET party_member_ids = #{partyMemberIds}
		WHERE community_no = #{communityNo}
	</update>
	
<!-- 커뮤니티 글 상세보기 -->
	<select id="getCommunityOne" resultMap="CommunityResultMap" resultType="Community">
		SELECT community.*, member.member_photo
		FROM community
		LEFT JOIN member ON community.member_id = member.member_id
		WHERE community_no = #{coNo}
	</select>
	
<!-- 커뮤니티 글 삭제 -->
	<delete id="deleteCommunity">
		DELETE From community WHERE community_no = #{ no }
	</delete>	
	
<!--  조회수 추가 메서드 -->
	<update id="addReadCount">
		UPDATE community
			SET community_read_count = IF (community_read_count = "0", "1", community_read_count + "1")
		WHERE community_no = #{coNo}
	</update>

<!-- 커뮤니티 댓글 입력 -->
	<insert id="addCommunityReply" parameterType="Community">
		INSERT INTO community
			(community_reg_date, community_content, community_parent_no, community_re_reply,
			 community_reply_target, category_no, member_id, member_nickname)
			 VALUES (SYSDATE(), #{communityContent}, #{communityParentNo}, #{communityReReply},
				  #{communityReplyTarget}, #{categoryNo}, #{memberId}, #{memberNickname})
	</insert>
	
<!-- 커뮤니티 댓글 수정 -->
	<update id="updateCommunityReply" parameterType="Community">
		UPDATE community
			SET community_content = #{communityContent} 
		WHERE community_no = #{communityNo}
	</update>
	
<!-- 커뮤니티 댓글 출력 -->
	<select id="getCommunityReply" parameterType="Community" resultMap="CommunityResultMap">
		SELECT community.*, member.member_photo FROM community
		LEFT JOIN member ON community.member_id = member.member_id
		WHERE community_parent_no = #{ communityParentNo } AND category_no <![CDATA[<=]]>  '0'
	</select>
	
	
<!-- 커뮤니티 댓글 삭제 - 답글이 없는경우 -->
	<delete id="delCommunityReply">
		DELETE From community WHERE community_no = #{ no }
	</delete>
	
<!--  커뮤니티 댓글 삭제 - 답글이 있는경우 -->
	<update id="delCommunityReplyType2">
		UPDATE community
			SET category_no = '-1', community_content = "삭제된 메세지입니다."
		WHERE community_no = #{no}
	</update>	
	
	
<!-- 커뮤니티 댓글 reReply 갯수 출력 -->
	<select id="countCommunityReReply" resultType="Integer">
		SELECT COUNT(community_re_reply) FROM community
		WHERE community_re_reply = #{no}
	</select>
	
<!-- 커뮤니티 댓글 작성자 - communityNo기준 -->	
	<select id="getCommunityReplyMemberId" resultType="String">
		SELECT member_id as memberId FROM community
		WHERE community_no = #{no}
	</select>
	
<!-- 커뮤니티 게시글 댓글 수 추가 -->
	<update id="addCommunityReplyCount">
		UPDATE community
			SET community_reply_count = community_reply_count + 1
			WHERE community_no = #{no}
	</update>

<!-- 커뮤니티 게시글 댓글 수 삭제 -->
	<update id="deleteCommunityReplyCount">
		UPDATE community
			SET community_reply_count = community_reply_count - 1
			WHERE community_no = #{no}
	</update>	

	
	<resultMap type="Community" id="CommunityResultMap">
		<id property="communityNo" column="community_no" />
		<result property="memberId" column="member_id" />
		<result property="memberNickname" column="member_nickname" />
		<result property="memberPhoto" column="member_photo" />
		<result property="categoryNo" column="category_no" />
		<result property="communityTitle" column="community_title" />
		<result property="communityRegDate" column="community_reg_date" />
		<result property="communityReplyCount" column="community_reply_count" />
		<result property="communityReadCount" column="community_read_count" />
		<result property="communityContent" column="community_content" />
		<result property="communityFile" column="community_file" />
		<result property="communityParentNo" column="community_parent_no" />
		<result property="communityReReply" column="community_re_reply" />
		<result property="communityReplyTarget" column="community_reply_target" />
		<result property="partyMembers" column="party_members" />
		<result property="partyMemberIds" column="party_member_ids" />
		<result property="partyDDay" column="party_d_day" />
		<result property="partyPlace" column="party_place" />
	</resultMap>
	
	
</mapper>